# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create-ephemeral-env:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "85:87:3f:ee:95:9d:50:f5:13:18:95:52:84:aa:bb:69"
      - run:
          name: "Create ephemeral env"
          command: |
            
            echo "This is where my CI will run\n"
            echo "It will run all needed unit tests, build and push image to ECR"
            echo "Now we create the ephemeral env based on the PR"
            
            curl --silent --location --remote-name \
            "https://github.com/frigus02/kyml/releases/download/v20210610/kyml_20210610_linux_amd64" && \
            chmod a+x kyml_20210610_linux_amd64 && \
            sudo mv kyml_20210610_linux_amd64 /usr/bin/kyml
            
            curl --silent --location --remote-name \
            "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v3.2.3/kustomize_kustomize.v3.2.3_linux_amd64" && \
            chmod a+x kustomize_kustomize.v3.2.3_linux_amd64 && \
            sudo mv kustomize_kustomize.v3.2.3_linux_amd64 /usr/bin/kustomize
            
            export PR_NAME=$(echo $CIRCLE_BRANCH | sed -e 's/\//-/g' | tr '[:upper:]' '[:lower:]')
            export IMAGE_TAG=1.21.3-debian-10-r48

            git clone git@github.com:sl-ahmedfourti/sl-app.git && cd sl-app
            
            mkdir -p stages/preview/$PR_NAME
            
            cat templates/preview-app.yaml \
            | kyml tmpl -e PR_NAME -e GITHUB_BRANCH_NAME\
            | tee preview/$PR_NAME.yaml
            
            cat templates/kustomization.yaml \
            | kyml tmpl -e PR_NAME -e IMAGE_TAG \
            | tee stages/preview/$PR_NAME/kustomization.yaml
            
            cd preview && chmod + scripts.sh && ./scripts.sh && cd .. 
            
            git config user.email "sl-demo@groupeseloger.com"
            git config user.name "sl-demo"
            git status
            if [ -n "$(git status --porcelain)" ]
            then
            git add .
            git commit -m "Deploy ephemeral env for branch $CIRCLE_BRANCH"
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            git push
            else
            echo "Nothing to commit"
            fi


  clean-ephemeral-env:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "85:87:3f:ee:95:9d:50:f5:13:18:95:52:84:aa:bb:69"
      - run:
          name: "Clean ephemeral env"
          command: |
            git clone git@github.com:sl-ahmedfourti/sl-app.git
            
            SHORT_COMMIT=$(git rev-parse --short  $CIRCLE_SHA1)
            if [[ "$(git log --oneline |grep $SHORT_COMMIT)" == *"Merge pull request"* ]]; then
            MERGE_MESSAGE=${$(git log --oneline |grep $SHORT_COMMIT)#/}
            MERGED_BRANCH=${MERGE_MESSAGE#*/}
            echo "Deleting branch $MERGED_BRANCH..."
            cd sl-app
            rm -rf stages/preview/$(echo $MERGED_BRANCH | sed -e 's/\//-/g' | tr '[:upper:]' '[:lower:]')
            rm -rf preview/$(echo $MERGED_BRANCH | sed -e 's/\//-/g' | tr '[:upper:]' '[:lower:]').yaml
            cd preview && chmod + scripts.sh && ./scripts.sh && cd .. 
            fi          
                        
            git config user.email "sl-demo@groupeseloger.com"
            git config user.name "sl-demo"
            git status
            if [ -n "$(git status --porcelain)" ]
            then
            git add .
            git commit -m "Clean ephemeral env for branch $MERGED_BRANCH"
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            git push
            else
            echo "Nothing to commit"
            fi

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  create-ephemeral-env:
    jobs:
      - create-ephemeral-env:
          filters:
            branches:
              only:
                - /^feature.*/
  clean-ephemeral-env:
    jobs:
      - clean-ephemeral-env:
          filters:
            branches:
              only:
                - main